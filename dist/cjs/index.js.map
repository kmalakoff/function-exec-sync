{"version":3,"sources":["index.ts"],"sourcesContent":["require('./polyfills.ts');\nconst fs = require('fs');\nconst path = require('path');\nconst cp = require('child_process');\nconst tmpdir = require('os').tmpdir || require('os-shim').tmpdir;\nconst suffix = require('temp-suffix');\nconst serialize = require('serialize-javascript');\nconst mkdirp = require('mkdirp');\nconst shortHash = require('short-hash');\nconst sleep = require('thread-sleep-compat');\n\nconst DEFAULT_SLEEP_MS = 100;\nconst ALLOWED_EXEC_PATH = ['node', 'node.exe', 'node.cmd'];\n\n// @ts-ignore\nconst unlinkSafe = require('./unlinkSafe.ts');\n\nexport type ExecWorkerOptions = {\n  name?: string;\n  cwd?: string;\n  env?: string;\n  callbacks?: boolean;\n  execPath?: string;\n  sleep?: number;\n};\n\nexport default function functionExecSync(options: ExecWorkerOptions, filePath: string /* arguments */): any {\n  const args = Array.prototype.slice.call(arguments, 2);\n  const workerData = { filePath, args, callbacks: options.callbacks || false, env: options.env ?? process.env, cwd: options.cwd ?? process.cwd() };\n\n  const name = options.name ?? 'exec-worker-sync';\n  const temp = path.join(tmpdir(), name, shortHash(workerData.cwd));\n  const input = path.join(temp, suffix('input'));\n  const output = path.join(temp, suffix('output'));\n\n  // store data to a file\n  mkdirp.sync(path.dirname(input));\n  fs.writeFileSync(input, serialize(workerData), 'utf8');\n  unlinkSafe(output);\n\n  // call the function\n  const execPath = options.execPath || process.execPath;\n  const worker = path.join(__dirname, 'worker.js');\n\n  // only node\n  if (ALLOWED_EXEC_PATH.indexOf(path.basename(execPath).toLowerCase()) < 0) throw new Error(`Expecting node executable. Received: ${path.basename(execPath)}`);\n\n  // use polling\n  if (!cp.execFileSync) {\n    // make sure the file exists\n    if (execPath !== process.execPath) require('fs-access-sync-compat')(execPath);\n\n    // exec and start polling\n    const sleepMS = options.sleep ?? DEFAULT_SLEEP_MS;\n    cp.exec(`\"${execPath}\" \"${worker}\" \"${input}\" \"${output}\"`);\n    while (!fs.existsSync(output)) {\n      sleep(sleepMS);\n    }\n  } else {\n    cp.execFileSync(execPath, [worker, input, output]);\n  }\n\n  // get data and clean up\n  const res = eval(`(${fs.readFileSync(output, 'utf8')})`);\n  unlinkSafe(input);\n  unlinkSafe(output);\n\n  // throw error from the worker\n  if (res.error) {\n    const err = new Error(res.error.message);\n    if (res.error.stack) err.stack = res.error.stack;\n    throw err;\n  }\n  // return the result\n  return res.value;\n}\n"],"names":["require","functionExecSync","options","filePath","args","Array","prototype","slice","call","arguments","workerData","callbacks","env","process","cwd","name","temp","path","join","tmpdir","shortHash","input","suffix","output","mkdirp","sync","dirname","fs","writeFileSync","serialize","unlinkSafe","execPath","worker","__dirname","ALLOWED_EXEC_PATH","indexOf","basename","toLowerCase","Error","cp","execFileSync","sleepMS","sleep","DEFAULT_SLEEP_MS","exec","existsSync","res","eval","readFileSync","error","err","message","stack","value"],"mappings":"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"}